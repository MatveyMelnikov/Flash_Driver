ARM GAS  /tmp/ccvdwvnv.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB68:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "flash_driver.h"
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/ccvdwvnv.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** SPI_HandleTypeDef *flash_driver_spi = &hspi1;
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_SPI1_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief  The application entry point.
  64:Core/Src/main.c ****   * @retval int
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Core/Src/main.c ****   HAL_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
  89:Core/Src/main.c ****   MX_GPIO_Init();
  90:Core/Src/main.c ****   MX_SPI1_Init();
ARM GAS  /tmp/ccvdwvnv.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   flash_driver_status status = flash_driver_check_link();
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   if (status)
  96:Core/Src/main.c ****     Error_Handler();
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   uint8_t output_data[4] = { 0x55, 0xaa, 0x55, 0xaa };
  99:Core/Src/main.c ****   uint8_t input_data[64];
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   //status = flash_driver_sector_erase(0x0);
 102:Core/Src/main.c ****   status |= flash_driver_write(0x0, output_data, sizeof(output_data));
 103:Core/Src/main.c ****   status |= flash_driver_write(0x4, output_data, sizeof(output_data));
 104:Core/Src/main.c ****   status |= flash_driver_write(0x8, output_data, sizeof(output_data));
 105:Core/Src/main.c ****   status |= flash_driver_write(0xc, output_data, sizeof(output_data));
 106:Core/Src/main.c ****   status |= flash_driver_read(0x0, input_data, sizeof(input_data));
 107:Core/Src/main.c ****   
 108:Core/Src/main.c ****   if (status || input_data[0] == 0)
 109:Core/Src/main.c ****     __asm("nop");
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END 2 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Infinite loop */
 114:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 115:Core/Src/main.c ****   while (1)
 116:Core/Src/main.c ****   {
 117:Core/Src/main.c ****     /* USER CODE END WHILE */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 120:Core/Src/main.c ****   }
 121:Core/Src/main.c ****   /* USER CODE END 3 */
 122:Core/Src/main.c **** }
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** /**
 125:Core/Src/main.c ****   * @brief System Clock Configuration
 126:Core/Src/main.c ****   * @retval None
 127:Core/Src/main.c ****   */
 128:Core/Src/main.c **** void SystemClock_Config(void)
 129:Core/Src/main.c **** {
 130:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 131:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 134:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 135:Core/Src/main.c ****   */
 136:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 137:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 138:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 140:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 141:Core/Src/main.c ****   {
 142:Core/Src/main.c ****     Error_Handler();
 143:Core/Src/main.c ****   }
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 146:Core/Src/main.c ****   */
 147:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
ARM GAS  /tmp/ccvdwvnv.s 			page 4


 148:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 152:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****     Error_Handler();
 157:Core/Src/main.c ****   }
 158:Core/Src/main.c **** }
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** /**
 161:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 162:Core/Src/main.c ****   * @param None
 163:Core/Src/main.c ****   * @retval None
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c **** static void MX_SPI1_Init(void)
 166:Core/Src/main.c **** {
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 175:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 176:Core/Src/main.c ****   hspi1.Instance = SPI1;
 177:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 178:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 179:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 180:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 181:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 182:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 183:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 184:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 185:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 186:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 187:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 188:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 189:Core/Src/main.c ****   {
 190:Core/Src/main.c ****     Error_Handler();
 191:Core/Src/main.c ****   }
 192:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c **** }
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** /**
 199:Core/Src/main.c ****   * @brief GPIO Initialization Function
 200:Core/Src/main.c ****   * @param None
 201:Core/Src/main.c ****   * @retval None
 202:Core/Src/main.c ****   */
 203:Core/Src/main.c **** static void MX_GPIO_Init(void)
 204:Core/Src/main.c **** {
ARM GAS  /tmp/ccvdwvnv.s 			page 5


  26              		.loc 1 204 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 86B0     		sub	sp, sp, #24
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 32
 205:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 205 3 view .LVU1
  39              		.loc 1 205 20 is_stmt 0 view .LVU2
  40 0004 0022     		movs	r2, #0
  41 0006 0292     		str	r2, [sp, #8]
  42 0008 0392     		str	r2, [sp, #12]
  43 000a 0492     		str	r2, [sp, #16]
  44 000c 0592     		str	r2, [sp, #20]
 206:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 207:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 210:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  45              		.loc 1 210 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 210 3 view .LVU4
  48              		.loc 1 210 3 view .LVU5
  49 000e 124B     		ldr	r3, .L3
  50 0010 9969     		ldr	r1, [r3, #24]
  51 0012 41F00401 		orr	r1, r1, #4
  52 0016 9961     		str	r1, [r3, #24]
  53              		.loc 1 210 3 view .LVU6
  54 0018 9969     		ldr	r1, [r3, #24]
  55 001a 01F00401 		and	r1, r1, #4
  56 001e 0091     		str	r1, [sp]
  57              		.loc 1 210 3 view .LVU7
  58 0020 0099     		ldr	r1, [sp]
  59              	.LBE4:
  60              		.loc 1 210 3 view .LVU8
 211:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  61              		.loc 1 211 3 view .LVU9
  62              	.LBB5:
  63              		.loc 1 211 3 view .LVU10
  64              		.loc 1 211 3 view .LVU11
  65 0022 9969     		ldr	r1, [r3, #24]
  66 0024 41F00801 		orr	r1, r1, #8
  67 0028 9961     		str	r1, [r3, #24]
  68              		.loc 1 211 3 view .LVU12
  69 002a 9B69     		ldr	r3, [r3, #24]
  70 002c 03F00803 		and	r3, r3, #8
  71 0030 0193     		str	r3, [sp, #4]
  72              		.loc 1 211 3 view .LVU13
  73 0032 019B     		ldr	r3, [sp, #4]
  74              	.LBE5:
  75              		.loc 1 211 3 view .LVU14
ARM GAS  /tmp/ccvdwvnv.s 			page 6


 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 214:Core/Src/main.c ****   HAL_GPIO_WritePin(Flash_CS_GPIO_Port, Flash_CS_Pin, GPIO_PIN_RESET);
  76              		.loc 1 214 3 view .LVU15
  77 0034 094C     		ldr	r4, .L3+4
  78 0036 0121     		movs	r1, #1
  79 0038 2046     		mov	r0, r4
  80 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
  81              	.LVL0:
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /*Configure GPIO pin : Flash_CS_Pin */
 217:Core/Src/main.c ****   GPIO_InitStruct.Pin = Flash_CS_Pin;
  82              		.loc 1 217 3 view .LVU16
  83              		.loc 1 217 23 is_stmt 0 view .LVU17
  84 003e 0123     		movs	r3, #1
  85 0040 0293     		str	r3, [sp, #8]
 218:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  86              		.loc 1 218 3 is_stmt 1 view .LVU18
  87              		.loc 1 218 24 is_stmt 0 view .LVU19
  88 0042 0393     		str	r3, [sp, #12]
 219:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
  89              		.loc 1 219 3 is_stmt 1 view .LVU20
  90              		.loc 1 219 24 is_stmt 0 view .LVU21
  91 0044 0493     		str	r3, [sp, #16]
 220:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  92              		.loc 1 220 3 is_stmt 1 view .LVU22
  93              		.loc 1 220 25 is_stmt 0 view .LVU23
  94 0046 0223     		movs	r3, #2
  95 0048 0593     		str	r3, [sp, #20]
 221:Core/Src/main.c ****   HAL_GPIO_Init(Flash_CS_GPIO_Port, &GPIO_InitStruct);
  96              		.loc 1 221 3 is_stmt 1 view .LVU24
  97 004a 02A9     		add	r1, sp, #8
  98 004c 2046     		mov	r0, r4
  99 004e FFF7FEFF 		bl	HAL_GPIO_Init
 100              	.LVL1:
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 224:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 225:Core/Src/main.c **** }
 101              		.loc 1 225 1 is_stmt 0 view .LVU25
 102 0052 06B0     		add	sp, sp, #24
 103              	.LCFI2:
 104              		.cfi_def_cfa_offset 8
 105              		@ sp needed
 106 0054 10BD     		pop	{r4, pc}
 107              	.L4:
 108 0056 00BF     		.align	2
 109              	.L3:
 110 0058 00100240 		.word	1073876992
 111 005c 000C0140 		.word	1073810432
 112              		.cfi_endproc
 113              	.LFE68:
 115              		.section	.text.Error_Handler,"ax",%progbits
 116              		.align	1
 117              		.global	Error_Handler
 118              		.syntax unified
 119              		.thumb
ARM GAS  /tmp/ccvdwvnv.s 			page 7


 120              		.thumb_func
 122              	Error_Handler:
 123              	.LFB69:
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** /* USER CODE END 4 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c **** /**
 232:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 233:Core/Src/main.c ****   * @retval None
 234:Core/Src/main.c ****   */
 235:Core/Src/main.c **** void Error_Handler(void)
 236:Core/Src/main.c **** {
 124              		.loc 1 236 1 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ Volatile: function does not return.
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 237:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 238:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 239:Core/Src/main.c ****   __disable_irq();
 130              		.loc 1 239 3 view .LVU27
 131              	.LBB6:
 132              	.LBI6:
 133              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
ARM GAS  /tmp/ccvdwvnv.s 			page 8


  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccvdwvnv.s 			page 9


  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 134              		.loc 2 140 27 view .LVU28
 135              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  /tmp/ccvdwvnv.s 			page 10


 136              		.loc 2 142 3 view .LVU29
 137              		.syntax unified
 138              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 139 0000 72B6     		cpsid i
 140              	@ 0 "" 2
 141              		.thumb
 142              		.syntax unified
 143              	.L6:
 144              	.LBE7:
 145              	.LBE6:
 240:Core/Src/main.c ****   while (1)
 146              		.loc 1 240 3 view .LVU30
 241:Core/Src/main.c ****   {
 242:Core/Src/main.c ****   }
 147              		.loc 1 242 3 view .LVU31
 240:Core/Src/main.c ****   while (1)
 148              		.loc 1 240 9 view .LVU32
 149 0002 FEE7     		b	.L6
 150              		.cfi_endproc
 151              	.LFE69:
 153              		.section	.text.MX_SPI1_Init,"ax",%progbits
 154              		.align	1
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 159              	MX_SPI1_Init:
 160              	.LFB67:
 166:Core/Src/main.c **** 
 161              		.loc 1 166 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165 0000 08B5     		push	{r3, lr}
 166              	.LCFI3:
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 3, -8
 169              		.cfi_offset 14, -4
 176:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 170              		.loc 1 176 3 view .LVU34
 176:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 171              		.loc 1 176 18 is_stmt 0 view .LVU35
 172 0002 0D48     		ldr	r0, .L11
 173 0004 0D4B     		ldr	r3, .L11+4
 174 0006 0360     		str	r3, [r0]
 177:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 175              		.loc 1 177 3 is_stmt 1 view .LVU36
 177:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 176              		.loc 1 177 19 is_stmt 0 view .LVU37
 177 0008 4FF48273 		mov	r3, #260
 178 000c 4360     		str	r3, [r0, #4]
 178:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 179              		.loc 1 178 3 is_stmt 1 view .LVU38
 178:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 180              		.loc 1 178 24 is_stmt 0 view .LVU39
 181 000e 0023     		movs	r3, #0
 182 0010 8360     		str	r3, [r0, #8]
 179:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
ARM GAS  /tmp/ccvdwvnv.s 			page 11


 183              		.loc 1 179 3 is_stmt 1 view .LVU40
 179:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 184              		.loc 1 179 23 is_stmt 0 view .LVU41
 185 0012 C360     		str	r3, [r0, #12]
 180:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 186              		.loc 1 180 3 is_stmt 1 view .LVU42
 180:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 187              		.loc 1 180 26 is_stmt 0 view .LVU43
 188 0014 0361     		str	r3, [r0, #16]
 181:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 189              		.loc 1 181 3 is_stmt 1 view .LVU44
 181:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 190              		.loc 1 181 23 is_stmt 0 view .LVU45
 191 0016 4361     		str	r3, [r0, #20]
 182:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 192              		.loc 1 182 3 is_stmt 1 view .LVU46
 182:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 193              		.loc 1 182 18 is_stmt 0 view .LVU47
 194 0018 4FF40072 		mov	r2, #512
 195 001c 8261     		str	r2, [r0, #24]
 183:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 196              		.loc 1 183 3 is_stmt 1 view .LVU48
 183:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 197              		.loc 1 183 32 is_stmt 0 view .LVU49
 198 001e C361     		str	r3, [r0, #28]
 184:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 199              		.loc 1 184 3 is_stmt 1 view .LVU50
 184:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 200              		.loc 1 184 23 is_stmt 0 view .LVU51
 201 0020 0362     		str	r3, [r0, #32]
 185:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 202              		.loc 1 185 3 is_stmt 1 view .LVU52
 185:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 203              		.loc 1 185 21 is_stmt 0 view .LVU53
 204 0022 4362     		str	r3, [r0, #36]
 186:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 205              		.loc 1 186 3 is_stmt 1 view .LVU54
 186:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 206              		.loc 1 186 29 is_stmt 0 view .LVU55
 207 0024 8362     		str	r3, [r0, #40]
 187:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 208              		.loc 1 187 3 is_stmt 1 view .LVU56
 187:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 209              		.loc 1 187 28 is_stmt 0 view .LVU57
 210 0026 0A23     		movs	r3, #10
 211 0028 C362     		str	r3, [r0, #44]
 188:Core/Src/main.c ****   {
 212              		.loc 1 188 3 is_stmt 1 view .LVU58
 188:Core/Src/main.c ****   {
 213              		.loc 1 188 7 is_stmt 0 view .LVU59
 214 002a FFF7FEFF 		bl	HAL_SPI_Init
 215              	.LVL2:
 188:Core/Src/main.c ****   {
 216              		.loc 1 188 6 discriminator 1 view .LVU60
 217 002e 00B9     		cbnz	r0, .L10
 196:Core/Src/main.c **** 
 218              		.loc 1 196 1 view .LVU61
ARM GAS  /tmp/ccvdwvnv.s 			page 12


 219 0030 08BD     		pop	{r3, pc}
 220              	.L10:
 190:Core/Src/main.c ****   }
 221              		.loc 1 190 5 is_stmt 1 view .LVU62
 222 0032 FFF7FEFF 		bl	Error_Handler
 223              	.LVL3:
 224              	.L12:
 225 0036 00BF     		.align	2
 226              	.L11:
 227 0038 00000000 		.word	hspi1
 228 003c 00300140 		.word	1073819648
 229              		.cfi_endproc
 230              	.LFE67:
 232              		.section	.text.SystemClock_Config,"ax",%progbits
 233              		.align	1
 234              		.global	SystemClock_Config
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 239              	SystemClock_Config:
 240              	.LFB66:
 129:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 241              		.loc 1 129 1 view -0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 64
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245 0000 00B5     		push	{lr}
 246              	.LCFI4:
 247              		.cfi_def_cfa_offset 4
 248              		.cfi_offset 14, -4
 249 0002 91B0     		sub	sp, sp, #68
 250              	.LCFI5:
 251              		.cfi_def_cfa_offset 72
 130:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 252              		.loc 1 130 3 view .LVU64
 130:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 253              		.loc 1 130 22 is_stmt 0 view .LVU65
 254 0004 2822     		movs	r2, #40
 255 0006 0021     		movs	r1, #0
 256 0008 06A8     		add	r0, sp, #24
 257 000a FFF7FEFF 		bl	memset
 258              	.LVL4:
 131:Core/Src/main.c **** 
 259              		.loc 1 131 3 is_stmt 1 view .LVU66
 131:Core/Src/main.c **** 
 260              		.loc 1 131 22 is_stmt 0 view .LVU67
 261 000e 0023     		movs	r3, #0
 262 0010 0193     		str	r3, [sp, #4]
 263 0012 0293     		str	r3, [sp, #8]
 264 0014 0393     		str	r3, [sp, #12]
 265 0016 0493     		str	r3, [sp, #16]
 266 0018 0593     		str	r3, [sp, #20]
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 267              		.loc 1 136 3 is_stmt 1 view .LVU68
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 268              		.loc 1 136 36 is_stmt 0 view .LVU69
 269 001a 0223     		movs	r3, #2
ARM GAS  /tmp/ccvdwvnv.s 			page 13


 270 001c 0693     		str	r3, [sp, #24]
 137:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 271              		.loc 1 137 3 is_stmt 1 view .LVU70
 137:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 272              		.loc 1 137 30 is_stmt 0 view .LVU71
 273 001e 0123     		movs	r3, #1
 274 0020 0A93     		str	r3, [sp, #40]
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 275              		.loc 1 138 3 is_stmt 1 view .LVU72
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 276              		.loc 1 138 41 is_stmt 0 view .LVU73
 277 0022 1023     		movs	r3, #16
 278 0024 0B93     		str	r3, [sp, #44]
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 279              		.loc 1 139 3 is_stmt 1 view .LVU74
 140:Core/Src/main.c ****   {
 280              		.loc 1 140 3 view .LVU75
 140:Core/Src/main.c ****   {
 281              		.loc 1 140 7 is_stmt 0 view .LVU76
 282 0026 06A8     		add	r0, sp, #24
 283 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 284              	.LVL5:
 140:Core/Src/main.c ****   {
 285              		.loc 1 140 6 discriminator 1 view .LVU77
 286 002c 68B9     		cbnz	r0, .L17
 147:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 287              		.loc 1 147 3 is_stmt 1 view .LVU78
 147:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 288              		.loc 1 147 31 is_stmt 0 view .LVU79
 289 002e 0F23     		movs	r3, #15
 290 0030 0193     		str	r3, [sp, #4]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 291              		.loc 1 149 3 is_stmt 1 view .LVU80
 149:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 292              		.loc 1 149 34 is_stmt 0 view .LVU81
 293 0032 0021     		movs	r1, #0
 294 0034 0291     		str	r1, [sp, #8]
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 295              		.loc 1 150 3 is_stmt 1 view .LVU82
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 296              		.loc 1 150 35 is_stmt 0 view .LVU83
 297 0036 0391     		str	r1, [sp, #12]
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 298              		.loc 1 151 3 is_stmt 1 view .LVU84
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 299              		.loc 1 151 36 is_stmt 0 view .LVU85
 300 0038 0491     		str	r1, [sp, #16]
 152:Core/Src/main.c **** 
 301              		.loc 1 152 3 is_stmt 1 view .LVU86
 152:Core/Src/main.c **** 
 302              		.loc 1 152 36 is_stmt 0 view .LVU87
 303 003a 0591     		str	r1, [sp, #20]
 154:Core/Src/main.c ****   {
 304              		.loc 1 154 3 is_stmt 1 view .LVU88
 154:Core/Src/main.c ****   {
 305              		.loc 1 154 7 is_stmt 0 view .LVU89
 306 003c 01A8     		add	r0, sp, #4
ARM GAS  /tmp/ccvdwvnv.s 			page 14


 307 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 308              	.LVL6:
 154:Core/Src/main.c ****   {
 309              		.loc 1 154 6 discriminator 1 view .LVU90
 310 0042 20B9     		cbnz	r0, .L18
 158:Core/Src/main.c **** 
 311              		.loc 1 158 1 view .LVU91
 312 0044 11B0     		add	sp, sp, #68
 313              	.LCFI6:
 314              		.cfi_remember_state
 315              		.cfi_def_cfa_offset 4
 316              		@ sp needed
 317 0046 5DF804FB 		ldr	pc, [sp], #4
 318              	.L17:
 319              	.LCFI7:
 320              		.cfi_restore_state
 142:Core/Src/main.c ****   }
 321              		.loc 1 142 5 is_stmt 1 view .LVU92
 322 004a FFF7FEFF 		bl	Error_Handler
 323              	.LVL7:
 324              	.L18:
 156:Core/Src/main.c ****   }
 325              		.loc 1 156 5 view .LVU93
 326 004e FFF7FEFF 		bl	Error_Handler
 327              	.LVL8:
 328              		.cfi_endproc
 329              	.LFE66:
 331              		.section	.text.main,"ax",%progbits
 332              		.align	1
 333              		.global	main
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
 338              	main:
 339              	.LFB65:
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 340              		.loc 1 67 1 view -0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 72
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344 0000 10B5     		push	{r4, lr}
 345              	.LCFI8:
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 4, -8
 348              		.cfi_offset 14, -4
 349 0002 92B0     		sub	sp, sp, #72
 350              	.LCFI9:
 351              		.cfi_def_cfa_offset 80
  75:Core/Src/main.c **** 
 352              		.loc 1 75 3 view .LVU95
 353 0004 FFF7FEFF 		bl	HAL_Init
 354              	.LVL9:
  82:Core/Src/main.c **** 
 355              		.loc 1 82 3 view .LVU96
 356 0008 FFF7FEFF 		bl	SystemClock_Config
 357              	.LVL10:
  89:Core/Src/main.c ****   MX_SPI1_Init();
ARM GAS  /tmp/ccvdwvnv.s 			page 15


 358              		.loc 1 89 3 view .LVU97
 359 000c FFF7FEFF 		bl	MX_GPIO_Init
 360              	.LVL11:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 361              		.loc 1 90 3 view .LVU98
 362 0010 FFF7FEFF 		bl	MX_SPI1_Init
 363              	.LVL12:
  93:Core/Src/main.c **** 
 364              		.loc 1 93 3 view .LVU99
  93:Core/Src/main.c **** 
 365              		.loc 1 93 32 is_stmt 0 view .LVU100
 366 0014 FFF7FEFF 		bl	flash_driver_check_link
 367              	.LVL13:
  95:Core/Src/main.c ****     Error_Handler();
 368              		.loc 1 95 3 is_stmt 1 view .LVU101
  95:Core/Src/main.c ****     Error_Handler();
 369              		.loc 1 95 6 is_stmt 0 view .LVU102
 370 0018 08B1     		cbz	r0, .L20
  96:Core/Src/main.c **** 
 371              		.loc 1 96 5 is_stmt 1 view .LVU103
 372 001a FFF7FEFF 		bl	Error_Handler
 373              	.LVL14:
 374              	.L20:
  96:Core/Src/main.c **** 
 375              		.loc 1 96 5 is_stmt 0 view .LVU104
 376 001e 0446     		mov	r4, r0
  98:Core/Src/main.c ****   uint8_t input_data[64];
 377              		.loc 1 98 3 is_stmt 1 view .LVU105
  98:Core/Src/main.c ****   uint8_t input_data[64];
 378              		.loc 1 98 11 is_stmt 0 view .LVU106
 379 0020 154B     		ldr	r3, .L24
 380 0022 1193     		str	r3, [sp, #68]
  99:Core/Src/main.c **** 
 381              		.loc 1 99 3 is_stmt 1 view .LVU107
 102:Core/Src/main.c ****   status |= flash_driver_write(0x4, output_data, sizeof(output_data));
 382              		.loc 1 102 3 view .LVU108
 102:Core/Src/main.c ****   status |= flash_driver_write(0x4, output_data, sizeof(output_data));
 383              		.loc 1 102 13 is_stmt 0 view .LVU109
 384 0024 0422     		movs	r2, #4
 385 0026 11A9     		add	r1, sp, #68
 386 0028 0020     		movs	r0, #0
 387              	.LVL15:
 102:Core/Src/main.c ****   status |= flash_driver_write(0x4, output_data, sizeof(output_data));
 388              		.loc 1 102 13 view .LVU110
 389 002a FFF7FEFF 		bl	flash_driver_write
 390              	.LVL16:
 102:Core/Src/main.c ****   status |= flash_driver_write(0x4, output_data, sizeof(output_data));
 391              		.loc 1 102 10 discriminator 1 view .LVU111
 392 002e 0443     		orrs	r4, r4, r0
 393 0030 E4B2     		uxtb	r4, r4
 394              	.LVL17:
 103:Core/Src/main.c ****   status |= flash_driver_write(0x8, output_data, sizeof(output_data));
 395              		.loc 1 103 3 is_stmt 1 view .LVU112
 103:Core/Src/main.c ****   status |= flash_driver_write(0x8, output_data, sizeof(output_data));
 396              		.loc 1 103 13 is_stmt 0 view .LVU113
 397 0032 0422     		movs	r2, #4
 398 0034 11A9     		add	r1, sp, #68
ARM GAS  /tmp/ccvdwvnv.s 			page 16


 399 0036 1046     		mov	r0, r2
 400 0038 FFF7FEFF 		bl	flash_driver_write
 401              	.LVL18:
 103:Core/Src/main.c ****   status |= flash_driver_write(0x8, output_data, sizeof(output_data));
 402              		.loc 1 103 10 discriminator 1 view .LVU114
 403 003c 0443     		orrs	r4, r4, r0
 404              	.LVL19:
 103:Core/Src/main.c ****   status |= flash_driver_write(0x8, output_data, sizeof(output_data));
 405              		.loc 1 103 10 discriminator 1 view .LVU115
 406 003e E4B2     		uxtb	r4, r4
 407              	.LVL20:
 104:Core/Src/main.c ****   status |= flash_driver_write(0xc, output_data, sizeof(output_data));
 408              		.loc 1 104 3 is_stmt 1 view .LVU116
 104:Core/Src/main.c ****   status |= flash_driver_write(0xc, output_data, sizeof(output_data));
 409              		.loc 1 104 13 is_stmt 0 view .LVU117
 410 0040 0422     		movs	r2, #4
 411 0042 11A9     		add	r1, sp, #68
 412 0044 0820     		movs	r0, #8
 413 0046 FFF7FEFF 		bl	flash_driver_write
 414              	.LVL21:
 104:Core/Src/main.c ****   status |= flash_driver_write(0xc, output_data, sizeof(output_data));
 415              		.loc 1 104 10 discriminator 1 view .LVU118
 416 004a 0443     		orrs	r4, r4, r0
 417              	.LVL22:
 104:Core/Src/main.c ****   status |= flash_driver_write(0xc, output_data, sizeof(output_data));
 418              		.loc 1 104 10 discriminator 1 view .LVU119
 419 004c E4B2     		uxtb	r4, r4
 420              	.LVL23:
 105:Core/Src/main.c ****   status |= flash_driver_read(0x0, input_data, sizeof(input_data));
 421              		.loc 1 105 3 is_stmt 1 view .LVU120
 105:Core/Src/main.c ****   status |= flash_driver_read(0x0, input_data, sizeof(input_data));
 422              		.loc 1 105 13 is_stmt 0 view .LVU121
 423 004e 0422     		movs	r2, #4
 424 0050 11A9     		add	r1, sp, #68
 425 0052 0C20     		movs	r0, #12
 426 0054 FFF7FEFF 		bl	flash_driver_write
 427              	.LVL24:
 105:Core/Src/main.c ****   status |= flash_driver_read(0x0, input_data, sizeof(input_data));
 428              		.loc 1 105 10 discriminator 1 view .LVU122
 429 0058 0443     		orrs	r4, r4, r0
 430              	.LVL25:
 105:Core/Src/main.c ****   status |= flash_driver_read(0x0, input_data, sizeof(input_data));
 431              		.loc 1 105 10 discriminator 1 view .LVU123
 432 005a E4B2     		uxtb	r4, r4
 433              	.LVL26:
 106:Core/Src/main.c ****   
 434              		.loc 1 106 3 is_stmt 1 view .LVU124
 106:Core/Src/main.c ****   
 435              		.loc 1 106 13 is_stmt 0 view .LVU125
 436 005c 4022     		movs	r2, #64
 437 005e 01A9     		add	r1, sp, #4
 438 0060 0020     		movs	r0, #0
 439 0062 FFF7FEFF 		bl	flash_driver_read
 440              	.LVL27:
 106:Core/Src/main.c ****   
 441              		.loc 1 106 10 discriminator 1 view .LVU126
 442 0066 0443     		orrs	r4, r4, r0
ARM GAS  /tmp/ccvdwvnv.s 			page 17


 443              	.LVL28:
 108:Core/Src/main.c ****     __asm("nop");
 444              		.loc 1 108 3 is_stmt 1 view .LVU127
 108:Core/Src/main.c ****     __asm("nop");
 445              		.loc 1 108 6 is_stmt 0 view .LVU128
 446 0068 14F0FF0F 		tst	r4, #255
 447 006c 02D1     		bne	.L21
 108:Core/Src/main.c ****     __asm("nop");
 448              		.loc 1 108 27 discriminator 1 view .LVU129
 449 006e 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 108:Core/Src/main.c ****     __asm("nop");
 450              		.loc 1 108 14 discriminator 1 view .LVU130
 451 0072 03B9     		cbnz	r3, .L22
 452              	.L21:
 109:Core/Src/main.c **** 
 453              		.loc 1 109 5 is_stmt 1 view .LVU131
 454              		.syntax unified
 455              	@ 109 "Core/Src/main.c" 1
 456 0074 00BF     		nop
 457              	@ 0 "" 2
 458              		.thumb
 459              		.syntax unified
 460              	.L22:
 115:Core/Src/main.c ****   {
 461              		.loc 1 115 3 view .LVU132
 120:Core/Src/main.c ****   /* USER CODE END 3 */
 462              		.loc 1 120 3 view .LVU133
 115:Core/Src/main.c ****   {
 463              		.loc 1 115 9 view .LVU134
 464 0076 FEE7     		b	.L22
 465              	.L25:
 466              		.align	2
 467              	.L24:
 468 0078 55AA55AA 		.word	-1437226411
 469              		.cfi_endproc
 470              	.LFE65:
 472              		.global	flash_driver_spi
 473              		.section	.data.flash_driver_spi,"aw"
 474              		.align	2
 477              	flash_driver_spi:
 478 0000 00000000 		.word	hspi1
 479              		.global	hspi1
 480              		.section	.bss.hspi1,"aw",%nobits
 481              		.align	2
 484              	hspi1:
 485 0000 00000000 		.space	88
 485      00000000 
 485      00000000 
 485      00000000 
 485      00000000 
 486              		.text
 487              	.Letext0:
 488              		.file 3 "/usr/local/src/arm-gnu-toolchain-13.2/arm-none-eabi/include/machine/_default_types.h"
 489              		.file 4 "/usr/local/src/arm-gnu-toolchain-13.2/arm-none-eabi/include/sys/_stdint.h"
 490              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 491              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 492              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
ARM GAS  /tmp/ccvdwvnv.s 			page 18


 493              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 494              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 495              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 496              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 497              		.file 12 "External/flash_driver/Inc/flash_driver_defs.h"
 498              		.file 13 "External/flash_driver/Inc/flash_driver.h"
 499              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 500              		.file 15 "<built-in>"
ARM GAS  /tmp/ccvdwvnv.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccvdwvnv.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccvdwvnv.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccvdwvnv.s:110    .text.MX_GPIO_Init:00000058 $d
     /tmp/ccvdwvnv.s:116    .text.Error_Handler:00000000 $t
     /tmp/ccvdwvnv.s:122    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccvdwvnv.s:154    .text.MX_SPI1_Init:00000000 $t
     /tmp/ccvdwvnv.s:159    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
     /tmp/ccvdwvnv.s:227    .text.MX_SPI1_Init:00000038 $d
     /tmp/ccvdwvnv.s:484    .bss.hspi1:00000000 hspi1
     /tmp/ccvdwvnv.s:233    .text.SystemClock_Config:00000000 $t
     /tmp/ccvdwvnv.s:239    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccvdwvnv.s:332    .text.main:00000000 $t
     /tmp/ccvdwvnv.s:338    .text.main:00000000 main
     /tmp/ccvdwvnv.s:468    .text.main:00000078 $d
     /tmp/ccvdwvnv.s:477    .data.flash_driver_spi:00000000 flash_driver_spi
     /tmp/ccvdwvnv.s:474    .data.flash_driver_spi:00000000 $d
     /tmp/ccvdwvnv.s:481    .bss.hspi1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
flash_driver_check_link
flash_driver_write
flash_driver_read
